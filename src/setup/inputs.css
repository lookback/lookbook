/* Icons inlined as SVG backgrounds for some input types. Sadly can't use variables inside of these
embeddings, so we have to duplicate them. */
:root {
  --input-icon-pencil: url('data:image/svg+xml;utf8,<svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.018 2.08266C13.23 1.87073 13.4816 1.70261 13.7585 1.58792C14.0354 1.47322 14.3322 1.41418 14.6319 1.41418C14.9316 1.41418 15.2284 1.47322 15.5053 1.58792C15.7822 1.70261 16.0338 1.87073 16.2457 2.08266C16.4577 2.29459 16.6258 2.5462 16.7405 2.8231C16.8552 3.1 16.9142 3.39679 16.9142 3.69651C16.9142 3.99622 16.8552 4.29301 16.7405 4.56991C16.6258 4.84682 16.4577 5.09842 16.2457 5.31035L5.35229 16.2038L0.914215 17.4142L2.1246 12.9761L13.018 2.08266Z" stroke="oklch(0.42055464277250465 0.017629829299455804 57.20727998394045)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>');

  --input-icon-pencil-warning: url('data:image/svg+xml;utf8,<svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.018 2.08266C13.23 1.87073 13.4816 1.70261 13.7585 1.58792C14.0354 1.47322 14.3322 1.41418 14.6319 1.41418C14.9316 1.41418 15.2284 1.47322 15.5053 1.58792C15.7822 1.70261 16.0338 1.87073 16.2457 2.08266C16.4577 2.29459 16.6258 2.5462 16.7405 2.8231C16.8552 3.1 16.9142 3.39679 16.9142 3.69651C16.9142 3.99622 16.8552 4.29301 16.7405 4.56991C16.6258 4.84682 16.4577 5.09842 16.2457 5.31035L5.35229 16.2038L0.914215 17.4142L2.1246 12.9761L13.018 2.08266Z" stroke="oklch(0.4520689571827139 0.0961148162691226 57.06845838474611)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>');

  --input-icon-pencil-active: url('data:image/svg+xml;utf8,<svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.018 2.08266C13.23 1.87073 13.4816 1.70261 13.7585 1.58792C14.0354 1.47322 14.3322 1.41418 14.6319 1.41418C14.9316 1.41418 15.2284 1.47322 15.5053 1.58792C15.7822 1.70261 16.0338 1.87073 16.2457 2.08266C16.4577 2.29459 16.6258 2.5462 16.7405 2.8231C16.8552 3.1 16.9142 3.39679 16.9142 3.69651C16.9142 3.99622 16.8552 4.29301 16.7405 4.56991C16.6258 4.84682 16.4577 5.09842 16.2457 5.31035L5.35229 16.2038L0.914215 17.4142L2.1246 12.9761L13.018 2.08266Z" stroke="oklch(0.49520078456250793 0.14479214891924955 256.96105608148923)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>');

  --input-icon-pencil-disabled: url('data:image/svg+xml;utf8,<svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.018 2.08266C13.23 1.87073 13.4816 1.70261 13.7585 1.58792C14.0354 1.47322 14.3322 1.41418 14.6319 1.41418C14.9316 1.41418 15.2284 1.47322 15.5053 1.58792C15.7822 1.70261 16.0338 1.87073 16.2457 2.08266C16.4577 2.29459 16.6258 2.5462 16.7405 2.8231C16.8552 3.1 16.9142 3.39679 16.9142 3.69651C16.9142 3.99622 16.8552 4.29301 16.7405 4.56991C16.6258 4.84682 16.4577 5.09842 16.2457 5.31035L5.35229 16.2038L0.914215 17.4142L2.1246 12.9761L13.018 2.08266Z" stroke="oklch(0.6445190811447986 0.025161898688078468 56.7458039076113)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>');

  --input-icon-search: url('data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 33 33"><path fill-rule="evenodd" clip-rule="evenodd" d="M9.08338 2.05691C2.33463 4.92505 -0.811209 12.7211 2.05694 19.4698C4.92508 26.2186 12.7211 29.3644 19.4699 26.4963C20.4385 26.0846 21.3328 25.5715 22.1459 24.9745L29.5824 32.412C30.3634 33.1931 31.6297 33.1932 32.4108 32.4122C33.1919 31.6312 33.192 30.3649 32.411 29.5838L24.9737 22.1454C27.656 18.4917 28.3977 13.5574 26.4963 9.08335C23.6281 2.3346 15.8321 -0.811239 9.08338 2.05691ZM20.9137 20.7623C23.4505 18.1642 24.324 14.1986 22.815 10.6479C20.8109 5.93228 15.3635 3.73416 10.6479 5.73824C5.93231 7.74232 3.73419 13.1897 5.73827 17.9053C7.74235 22.6209 13.1897 24.819 17.9053 22.8149C19.0001 22.3496 19.9593 21.6987 20.7616 20.9145C20.7856 20.8878 20.8104 20.8616 20.8361 20.8359C20.8615 20.8105 20.8874 20.786 20.9137 20.7623Z" fill="oklch(0.7339257262016716 0.03164836056507093 62.42273383732768)" /></svg>');
}

label {
  &:where(
    &:has(
        /* Target labels immediately preceding an input. */
        + :where(input, textarea, select, [contenteditable='true']),
        /* Target labels immediately preceeding any element which has an input. */
        + * > :where(input, textarea, select, [contenteditable='true'])
    ),
        /* Manually apply with a class. */
        &.label
    ) {
    font-weight: var(--font-weight-bold);
    color: var(--color-input-label);
    font-size: var(--text-sm);

    &:not(.label) {
      display: block;
      margin-bottom: var(--spacing-3);
    }
  }
}

:where(input, textarea)::placeholder {
  color: var(--color-input-placeholder-text);
  font-style: italic;
}

[contenteditable='true'] {
  &[aria-placeholder]:empty::before {
    content: attr(aria-placeholder);
    color: var(--color-input-placeholder-text);
    display: inline-block;
    pointer-events: none;
  }

  &[aria-disabled='true'] {
    pointer-events: none; /* Required to prevent input! */
  }
}

:where(input:not([type='radio'], [type='checkbox'], [type='range']), textarea, select, [contenteditable='true']) {
  /* We change the border width on :focus, but use box shadow to avoid layout shifts. */
  --border-width: var(--input-border-width);
  --border-color: var(--color-input-border);
  appearance: none;
  border-radius: var(--input-radius-sm);
  background-color: var(--color-input-bg);
  color: var(--color-input-text);
  padding: var(--input-spacing-block) var(--input-spacing-inline);
  box-shadow: inset 0 0 0 var(--border-width) var(--border-color);

  &:where(:not(select[multiple]):focus) {
    --border-width: var(--input-border-width-active);
    --border-color: var(--color-input-border-active);
    background-color: var(--color-input-bg-active);
    color: var(--color-input-text-active);
  }

  &:where(:disabled, [aria-disabled='true']) {
    background-color: var(--color-input-bg-disabled);
    color: var(--color-input-text-disabled);
    box-shadow: none;

    &::placeholder {
      color: var(--color-input-placeholder-disabled-text);
    }
  }

  /* This has to be on a separate declaration... */
  &[aria-disabled='true'][aria-placeholder]:empty::before {
    color: var(--color-input-placeholder-disabled-text);
  }

  /* Error states */
  &:where(:user-invalid, :user-invalid:focus, .input-invalid, [aria-invalid='true']) {
    --border-color: var(--color-warning-stroke);
    --border-width: var(--border-width-warning);
  }
}

:where(input:not([type='radio'], [type='checkbox'], [type='range']), select:not([multiple])) {
  height: var(--spacing-10);
  line-height: 1;

  /* Only bottom border, no background. */
  &.mode-inline {
    font-weight: normal;
    border-radius: revert-layer;
    padding: revert-layer;
    box-shadow: inset 0 calc(var(--border-width) * -1) 0 0 var(--border-color);
    font-size: var(--text-lg);
    background: transparent var(--input-icon-pencil) no-repeat right
      var(--spacing-4) center;
    background-size: 0.8em; /* = 16px */
    padding-right: 2.5em;

    &:focus {
      background-image: var(--input-icon-pencil-active);
    }

    &:disabled {
      background-image: var(--input-icon-pencil-disabled);
    }

    &:is(:user-invalid, :user-invalid:focus) {
      background-image: var(--input-icon-pencil-warning);
    }
  }
}

:where(textarea, [contenteditable='true']) {
  padding: var(--input-spacing-block) var(--input-spacing-inline);
  border-radius: var(--input-radius-lg);
  font-weight: var(--font-weight-normal);
}

input:where([type='search']) {
  border-radius: 4em;
  background-repeat: no-repeat;
  background-size: 1em;
  background-position: left var(--spacing-4) center;
  padding-left: 2.3em; /* Will size with text. */
  /* Sadly no variables in embedded SVGs. The color is --grey-700: */
  background-image: var(--input-icon-search);
}

select {
  text-overflow: ellipsis;

  &:not([multiple]) {
    padding-right: var(--spacing-8); /* give room for the chevron bg */
    background-repeat: no-repeat;
    background-size: 0.75em;
    background-position: right var(--spacing-4) center;
    background-image: url('data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0.679556 5.56825C1.54021 4.76907 2.88576 4.81891 3.68493 5.67956L12 14.6342L20.3151 5.67956C21.1142 4.81891 22.4598 4.76907 23.3204 5.56825C24.1811 6.36742 24.2309 7.71297 23.4318 8.57362L13.5583 19.2065C13.156 19.6399 12.5913 19.8861 12 19.8861C11.4087 19.8861 10.844 19.6399 10.4417 19.2065L0.568245 8.57362C-0.23093 7.71297 -0.181094 6.36742 0.679556 5.56825Z" fill="currentColor"/></svg>');
  }
}

select[multiple] {
  --padding: 4px;
  padding: var(--padding);
  height: fit-content;
  resize: block;

  option {
    padding: var(--spacing-2) var(--spacing-3);
    border-radius: calc(var(--input-radius-sm) - var(--padding) / 2);

    &:hover:not(:checked):enabled {
      background-color: var(--color-input-option-bg-hover);
    }

    &:not(:last-child) {
      margin-bottom: 2px;
    }

    &:checked {
      background-color: var(--color-input-bg-selected);
      color: var(--color-white);
    }
  }
}

progress {
  --bg-color: var(--color-grey-300);
  --filler-color: var(--color-accent);
  --radius: 3em;
  height: var(--spacing-2);
  width: 100%;
  background-color: var(--bg-color);
  border-radius: var(--radius);

  :is(&.done, &[value='1'], &[value='100']) {
    --filler-color: var(--color-success-bg-strong);
  }

  &::-webkit-progress-bar {
    background-color: var(--bg-color);
    border-radius: var(--radius);
  }

  &::-moz-progress-bar {
    border-radius: var(--radius);
    background-color: var(--filler-color);
    transition: width 100ms ease;
  }

  &::-webkit-progress-value {
    border-radius: var(--radius);
    background-color: var(--filler-color);
    transition: width 100ms ease;
  }
}

input[type='color'] {
  appearance: auto;
  padding: inherit;
  height: revert-layer;
}

fieldset {
  &:disabled {
    opacity: 0.5;
    pointer-events: none;
  }
}
