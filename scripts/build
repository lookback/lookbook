#!/usr/bin/env bash

src_path=src

env=${NODE_ENV:-production}

# Relative to $src_path
all=lookbook.css
base=base.css
utils=utils.css

# Dist dir
dir=dist

ext=css
ext_min_maps=dist.css
ext_min=bare.css

build_file () {
  local file_path="$src_path/$1"
  local rename_to=$2

  echo "üïê Building $file_path..."

  # Emit minified and sourcemapped into dist/<file>.dist.css
  NODE_ENV=$env npx postcss "$file_path" --dir "$dir" --ext "$ext_min_maps"

  # Emit non-minified into dist/<file>.css
  # Meant for being included in other projects, before minification and source mapping
  NODE_ENV='development' npx postcss "$file_path" --no-map --dir "$dir"

  # Emit minified, non-sourcemap dist/<file>.bare.css
  NODE_ENV=$env npx postcss "$file_path" --no-map --ext "$ext_min" --dir "$dir"
}

format_file () {
  local file=$1
  echo "üïê Formatting $dir/$file with Prettier..."
  prettier --write "$dir/$file"
}

check_size () {
  local file=$1

  local size_nonminified="$(ls -lah $dir/$file.$ext | awk -F " " {'print $5'})"
  echo "‚úÖ $file: Built non-minified version into $dir/$file.$ext ($size_nonminified)"

  local size_nonmap="$(ls -lah $dir/$file.$ext_min | awk -F " " {'print $5'})"
  echo "‚úÖ $file: Built minified version into $dir/$file.$ext_min ($size_nonmap)"

  local size="$(ls -lah $dir/$file.$ext_min_maps | awk -F " " {'print $5'})"

  echo "‚úÖ $file: Built minified version (with sourcemaps) into $dir/$file.$ext_min_maps ($size)"
  echo ""
}

build_file $all

status=$?

build_file $base
build_file $utils

format_file "lookbook.css"
format_file "base.css"
format_file "utils.css"

check_size "lookbook"
check_size "base"
check_size "utils"

exit $status
